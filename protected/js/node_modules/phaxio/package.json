{
  "author": {
    "name": "Chad Smith",
    "email": "chad@nospam.me",
    "url": "http://twitter.com/chadsmith"
  },
  "contributors": [
    {
      "name": "Francis Gulotta",
      "email": "wizard@roborooter.com",
      "url": "http://rbrtr.com"
    }
  ],
  "name": "phaxio",
  "description": "Send faxes with the Phaxio API",
  "keywords": [
    "fax",
    "phaxio"
  ],
  "version": "0.0.6",
  "homepage": "https://github.com/chadsmith/node-phaxio",
  "repository": {
    "type": "git",
    "url": "git://github.com/chadsmith/node-phaxio.git"
  },
  "engines": {
    "node": "0.8.x"
  },
  "main": "./phaxio.js",
  "dependencies": {
    "request": "2.16.x",
    "mime": "1.2.x"
  },
  "readme": "# node-phaxio\n\nSend faxes with [Phaxio](http://www.phaxio.com). It's completely asynchronous.\n\n## Installation\n\n`npm install phaxio`\n\n## Usage overview\n\n```javascript\nvar Phaxio = require('phaxio'),\n  phaxio = new Phaxio('e222........................', '62e5........................'),\n  callback = function(err,data){console.log(data);};\n\nphaxio.sendFax({\n\tto: '13165555555',\n  string_data: 'Faxing from Node.js',\n  string_data_type: 'text'\n},callback);\n```\nResponse\n```javascript\n{ success: true,\n  message: 'Retrieved fax successfully',\n  data:\n   { id: '111111',\n     num_pages: '0',\n     cost: 0,\n     direction: 'sent',\n     status: 'queued',\n     is_test: 'true',\n     requested_at: 1344829113,\n     recipients: [ { number: '13165555555', status: 'queued' } ]\n   }\n}\n\n```\n\n## Constructor\n\n### new Phaxio(key, secret);\n\nReturns a phaxio object with your keys set on the object.\n\n## Methods\n\n### phaxio.sendFax(options, callback);\n\n```javascript\nopt = {\n  // always required can be an array of a single string\n  to = ['xxxxxxxx', 'xxxxxxxxx'],\n  // one of these is required\n  filenames = ['path','path','path'],\n  string_data = 'String of data for phaxio to parse'\n  //optional\n  string_data_type: '',\n  batch: \"and othe phaxio options\"\n}\n\nphaxio.sendFax({\n    to: '13165555555', \n    filenames: ['coverletter.doc', 'resume.pdf']\n  }, function(err,res) {\n  console.log(res);\n});\n\nphaxio.sendFax({\n  to: '13165555555',\n  string_data: 'http://www.google.com/',\n  string_data_type: 'url'\n});\n\nvar batchID;\nphaxio.sendFax({\n    to: ['13165555555', '19135555555'], \n    filenames: 'my-cat.jpg', \n    batch: true \n  }, function(err,res) {\n  if(res.batchId){\n    batchId = res.batchId;\n  }\n});\n```\n\n### phaxio.faxStatus(faxId, callback)\n\nReturns the status of `faxId`\n```javascript\nphaxio.faxStatus('123456', function(err, res) {\n  console.log(res);\n});\n```\n\n### phaxio.fireBatch(batchId, callback)\n\nFires the batch `batchId`\n```javascript\nphaxio.fireBatch(batchId);\n```\n### phaxio.closeBatch(batchId, callback)\n\nCloses the batch `batchId`\n```javascript\nphaxio.closeBatch('123456');\n```\n### phaxio.provisionNumber(options, callback);\n\nProvisions a number in area code `area_code`\n```javascript\nphaxio.provisionNumber({\n    area_code: '212',\n    callback_url: 'http://localhost/'\n  }, function(res) {\n  console.log(res);\n});\n```\n### phaxio.releaseNumber(number, callback)\n\nReleases the number `number`\n```javascript\nphaxio.releaseNumber('8475551234', function(err, res) {\n  console.log(res);\n});\n```\n### phaxio.numberList([options,] callback)\n\nReturns user phone numbers matching optional params `area_code` or `number`\n```javascript\nphaxio.numberList(function(err, res) {\n  console.log(res);\n});\n\nphaxio.numberList({ area_code: '847' }, function(err, res) {\n  console.log(res);\n});\n```\n### phaxio.accountStatus(callback)\n\nReturns the account status\n```javascript\nphaxio.accountStatus(function(err, res) {\n  console.log(res);\n});\n```\n### phaxio.testReceive(options, callback)\n\nSimulates receiving a fax containing the PhaxCode in `filename` with optional params `from_number` and `to_number`\n```javascript\nphaxio.testReceive({filenames: 'PhaxCode.pdf'}, function(err, res) {\n  console.log(res);\n});\n\nphaxio.testReceive({\n    from_number: '3165555555',\n    to_number: '9135555555',\n    filenames: 'PhaxCode.pdf'\n  }, function(err, res) {\n  console.log(res);\n});\n```\n\n### phaxio.attachPhaxCodeToPdf(options, callback)\n\nReturns a PDF of `filenames` with a PhaxCode at the `x`,`y` location specified with optional params `metadata` and `page_number`\n```javascript\nphaxio.attachPhaxCodeToPdf({\n    filenames: 'resume.doc',\n    x:0,\n    y:5\n  },function(err, buffer) {\n    fs.writeFile(path.join(__dirname, 'resume-with-PhaxCode.pdf'), buffer, 'binary');\n});\n\nphaxio.attachPhaxCodeToPdf({\n    filenames:'kittens.pdf',\n    x:5,\n    y:25,\n    metadata: 'Fax with kittens', \n    page_number: 5\n  }, function(err, buffer) {\n    fs.writeFile(path.join(__dirname, 'kittens-with-PhaxCode.pdf'), buffer, 'binary');\n});\n```\n### phaxio.createPhaxCode([options,] callback)\n\nCreates a new PhaxCode with optional `metadata` param and returns the URL or returns a PDF if optional `redirect` param is true\n```javascript\nphaxio.createPhaxCode(function(err, res) {\n  console.log(res);\n});\n\nphaxio.createPhaxCode({ metadata: 'Awesome', redirect: true }, function(err, buffer) {\n  fs.writeFileSync(path.join(__dirname, 'Awesome-PhaxCode.pdf'), buffer, 'binary');\n});\n```\n### phaxio.getHostedDocument(options, callback)\n\nReturns the hosted document `name` with a basic PhaxCode or custom PhaxCode if `metadata` is set\n```javascript\n\tphaxio.getHostedDocument({name:'order-form'}, function(err, buffer) {\n\t  fs.writeFileSync(path.join(__dirname, 'order-form.pdf'), buffer, 'binary');\n\t});\n\n\tphaxio.getHostedDocument({\n      name:'order-form', \n      metadata: 'Referred by Chad Smith'\n    }, function(err, buffer) {\n\t  fs.writeFileSync(path.join(__dirname, 'order-form-with-referral-code.pdf'), buffer, 'binary');\n\t});\n```\n### phaxio.faxFile(options, callback)\n\nReturns the thumbnail or PDF of fax requested, optional `type` specifies _p_df (default), _s_mall or _l_arge thumbnail\n```javascript\nphaxio.faxFile({id:'123456'}, function(err, buffer) {\n  fs.writeFileSync(path.join(__dirname, 'fax-123456.pdf'), buffer, 'binary');\n});\n\nphaxio.faxFile({\n    id:'123456',\n    type:'l'\n  }, function(err, buffer) {\n  fs.writeFileSync(path.join(__dirname, '123456.jpg'), buffer, 'binary');\n});\n```\n## TODO\n\n* Receiving [fax callbacks](http://www.phaxio.com/docs/api/receive/receiveCallback)\n* Support for [faxList](http://www.phaxio.com/docs/api/general/faxList)\n\nSee the [issue tracker](http://github.com/chadsmith/node-phaxio/issues) for more.\n\n## Author\n\n[Chad Smith](http://twitter.com/chadsmith) ([chad@nospam.me](mailto:chad@nospam.me)).\n[Francis Gulotta](http://twitter.com/reconbot) ([rbrtr.com](http://www.rbrtr.com))\n\n## License\n\nThis project is [UNLICENSED](http://unlicense.org/) and not endorsed by or affiliated with [Phaxio](http://www.phaxio.com).\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/chadsmith/node-phaxio/issues"
  },
  "_id": "phaxio@0.0.6",
  "_shasum": "878a4832b28d8014def472446ba062c2873919ac",
  "_from": "phaxio@",
  "_resolved": "https://registry.npmjs.org/phaxio/-/phaxio-0.0.6.tgz"
}
